Template.skillsSummary.onRendered( () => {});Template.skillsSummary.onCreated( () => {    var self = this;    self.ready = new ReactiveVar();    var template = Template.instance();    template.parentCategory = new ReactiveVar( 'all' );    template.subSpecialization  = new ReactiveVar( 'all' );    template.listedSpecialization  = new ReactiveVar( 'all' );    template.listedRole  = new ReactiveVar( 'all' );    template.listedIndustry  = new ReactiveVar( 'all' );    template.experience  = new ReactiveVar( 'all' );    template.location  = new ReactiveVar( 'all' );    template.totalCount  = new ReactiveVar();    template.filters = {};    Tracker.autorun(function() {      console.log(template.filters);      var jss = SubManager.subscribe( 'JobStreetSources' );      var stats = SubManager.subscribe( 'skillsAggregations',template.filters );      self.ready.set(jss.ready() && stats.ready());    });});Template.skillsSummary.helpers({  industries: function() {      let data = JobStreetSources.find( {}, { fields: { _id: 1, sourceCategory: 1}} );      if ( data ) {        return _.uniq( data.map( ( item ) => {          return item.sourceCategory;        }), true );      }  },  child( name ) {        let query  = name ? { sourceCategory: name } : {},        children = JobStreetSources.find( query, { fields: { sourceSpecialization: 1 } } );      if ( children ) {      return children.map( ( child ) => {        return child.sourceSpecialization;      });      }  },  currentIndustry() {    let name = Template.instance().parentCategory.get();    return name === 'all' ? '' : name;  },  totalCount() {    let counts = Template.instance().totalCount.get(),        total    = 0;    if ( counts ) {      counts.map( ( instance ) => total += instance.total );    }    return `${ total  }`;  },  tableItems() {    let tableItems = SkillsAggregations.find().fetch();    if ( tableItems ) {    var mapped = tableItems.map( ( item, index, cursor ) => {      return {        index: index,        skillKeyword: item.skillKeyword,        total: +`${ item.total }`      };    });          return mapped.sort(function(a, b) {      return b.total-a.total;    });    }   }});Template.skillsSummary.events({  'change [name="industry"]': function(event, template) {      let industry = event.target.value;      console.log('industry handler' + industry);      template.parentCategory.set( industry );      if (template.find( '[name="specialization"]' ).value != 'all') {          console.log('found a specialization loop on industry change');          let specialization   = template.find( '[name="specialization"]' ),              isMatch = JobStreetSources.findOne( { _id: industry, sourceSpecialization: specialization.value } );                          if ( !isMatch ) {                specialization.querySelector( 'option[value="all"]' ).setAttribute( 'selected', true );                template.parentCategory.set( 'all' );              }      }  },  'change [name="specialization"]': function(event, template) {      template.subSpecialization.set( event.target.value );  }});